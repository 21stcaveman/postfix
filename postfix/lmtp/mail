From wietse@porcupine.org  Sat Apr 15 10:47:09 2000
Return-Path: <wietse@porcupine.org>
Delivered-To: wietse@hades.porcupine.org
Received: from spike.porcupine.org (spike.porcupine.org [168.100.189.2])
	by hades.porcupine.org (Postfix) with ESMTP id 567DC18A54
	for <wietse@hades.porcupine.org>; Sat, 15 Apr 2000 10:47:09 -0400 (EDT)
Received: by spike.porcupine.org (Postfix, from userid 100)
	id BE9C14563D; Sat, 15 Apr 2000 10:47:08 -0400 (EDT)
Delivered-To: wietse@porcupine.org
Received: from ns0.utdallas.edu (ns0.utdallas.edu [129.110.10.1])
	by spike.porcupine.org (Postfix) with ESMTP id E91E045630
	for <wietse@porcupine.org>; Sat, 15 Apr 2000 09:37:17 -0400 (EDT)
Received: from spartacus.utdallas.edu (spartacus.utdallas.edu [129.110.3.11])
	by ns0.utdallas.edu (Postfix) with SMTP id 7D0601A00B9
	for <wietse@porcupine.org>; Sat, 15 Apr 2000 08:36:35 -0500 (CDT)
To: Wietse Venema <wietse@porcupine.org>
Subject: [Markku Järvinen <Markku.Jarvinen@tpo.fi>] postfix lmtp
From: Amos Gouaux <amos@utdallas.edu>
Date: 15 Apr 2000 08:37:54 -0500
Message-ID: <q6m66tj32od.fsf@spartacus.utdallas.edu>
Lines: 73
User-Agent: Gnus/5.0804 (Gnus v5.8.4) XEmacs/21.1 (Bryce Canyon)
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="=-=-="
Sender: wietse@porcupine.org
Status: ROr

--=-=-=

I suspect you've already dealt with this one during the merging, but
forwarding in case not.

I do recall one reason why I just inserted RSET into the state
machine as I did--I wanted to check the response.  Though, this is
easily remedied by having a mini state machine in the lmtp_rset
function.

I guess I thought that having RSET in the state machine would be
okay because of this:

            while ((rec_type = rec_get(state->src, state->scratch, 0)) > 0) {
                if (rec_type != REC_TYPE_NORM && rec_type != REC_TYPE_CONT)
                    break;
                if (prev_type != REC_TYPE_CONT)
                    if (vstring_str(state->scratch)[0] == '.')
                        smtp_fputc('.', session->stream);
                if (rec_type == REC_TYPE_CONT)
                    smtp_fwrite(vstring_str(state->scratch),
                                VSTRING_LEN(state->scratch),
                                session->stream);
                else
                    smtp_fputs(vstring_str(state->scratch),
                               VSTRING_LEN(state->scratch),
                               session->stream);
                prev_type = rec_type;
            }

Wouldn't this just suck in the entire message text, then put a '.'
into the dialog?  How would a RSET in the message text jumble up the
state machine?

Amos



--=-=-=
Content-Type: message/rfc822; charset=""
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Return-Path: <markku.jarvinen@tpo.fi>
X-Sieve: cmu-sieve 1.3
Received: from antivirus.tpo.fi (ns3.tpo.fi [212.63.10.250])
	by ns0.utdallas.edu (Postfix) with ESMTP id 0700019FFF2
	for <amos@utdallas.edu>; Fri, 14 Apr 2000 04:14:18 -0500 (CDT)
Received: from ky.tpo.fi (localhost [127.0.0.1])
	by antivirus.tpo.fi (8.9.3/8.9.3) with ESMTP id MAA09192
	for <amos@utdallas.edu>; Fri, 14 Apr 2000 12:14:51 +0300 (EET DST)
Rec=
eived: from mtaj (home-f.ttk.tpo.fi [212.63.14.2])
	by ky.tpo.fi (Postfix) with SMTP id 801AFF568
	for <amos@utdallas.edu>; Fri, 14 Apr 2000 12:14:50 +0300 (EET DST)
Mes=
sage-ID: <05f601bfa5f1$bb2097c0$69fd1fac@ttk.tpo.fi>
From: Markku J=E4rvinen <Markku.Jarvinen@tpo.fi>
To: <amos@utdallas.edu>
Subject: postfix lmtp
Date: Fri, 14 Apr 2000 12:13:42 +0300
MIME-Version: 1.0
Content-Type: text/plain;
	charset=3D"iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2919.6600
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600

Hi!

In line 349 of lmtp_proto.c you just print the sender into LMTP-transac=
tion.
vstring_sprintf(next_command, "MAIL FROM:<%s>", request->sender);
This fails when the sender address has spaces in it, you should first r=
un it
through quota_821_local to get it into the right format for LMTP (same =
as
SMTP).

    - Markku



--=-=-=--




From wietse@porcupine.org  Sat Feb 26 09:17:05 2000
Return-Path: <wietse@porcupine.org>
Delivered-To: wietse@hades.porcupine.org
Received: from spike.porcupine.org (spike.porcupine.org [168.100.189.2])
	by hades.porcupine.org (Postfix) with ESMTP id E0D7F1886D
	for <wietse@hades.porcupine.org>; Sat, 26 Feb 2000 09:17:04 -0500 (EST)
Received: by spike.porcupine.org (Postfix, from userid 100)
	id A520145659; Sat, 26 Feb 2000 09:17:04 -0500 (EST)
Delivered-To: wietse@porcupine.org
Received: from ns0.utdallas.edu (ns0.utdallas.edu [129.110.10.1])
	by spike.porcupine.org (Postfix) with ESMTP id 5773F45657
	for <wietse@porcupine.org>; Fri, 25 Feb 2000 19:41:51 -0500 (EST)
Received: from spartacus.utdallas.edu (spartacus.utdallas.edu [129.110.3.11])
	by ns0.utdallas.edu (Postfix) with SMTP id 782F91A00D7
	for <wietse@porcupine.org>; Fri, 25 Feb 2000 18:04:16 -0600 (CST)
To: wietse@porcupine.org (Wietse Venema)
Subject: Re: lmtp update
References: <20000221181534.11F7C45659@spike.porcupine.org>
From: Amos Gouaux <amos@utdallas.edu>
Date: 25 Feb 2000 18:04:54 -0600
In-Reply-To: wietse@porcupine.org's message of "Mon, 21 Feb 2000 13:15:34 -0500 (EST)"
Message-ID: <q6mitzcvnfd.fsf@spartacus.utdallas.edu>
Lines: 6
User-Agent: Gnus/5.0804 (Gnus v5.8.4) XEmacs/21.1 (Bryce Canyon)
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="=-=-="
Sender: wietse@porcupine.org
Status: RO

--=-=-=

How's this?

Amos


--=-=-=
Content-Disposition: attachment; filename=lmtp-man
Content-Description: lmtp-man

.TH LMTP 8 
.ad
.fi
.SH NAME
lmtp
\-
Postfix local delivery via LMTP
.SH SYNOPSIS
.na
.nf
\fBlmtp\fR [generic Postfix daemon options] [server attributes...]
.SH DESCRIPTION
.ad
.fi
The LMTP client processes message delivery requests from
the queue manager. Each request specifies a queue file, a sender
address, a domain or host to deliver to, and recipient information.
This program expects to be run from the \fBmaster\fR(8) process
manager.

The LMTP client updates the queue file and marks recipients
as finished, or it informs the queue manager that delivery should
be tried again at a later time. Delivery problem reports are sent
to the \fBbounce\fR(8) or \fBdefer\fR(8) daemon as appropriate.

There are two basic modes of operation for the LMTP client:
.IP \(bu
Communication with a local LMTP server via UNIX domain sockets.
.IP \(bu
Communication with a (possibly remote) LMTP server via
Internet sockets.
.PP
If no server attributes are specified, the LMTP client will contact
the destination host derived from the message delivery request using
the TCP port defined as \fBlmtp\fR in \fBservices\fR(4).  If no such
service is found, the \fBlmtp_tcp_port\fR configuration parameter
(default value of 24) will be used.

In order to use a local LMTP server, this LMTP server will need to
be specified via the server attributes described in the following
section.  Typically, the LMTP client would also be configured as the
\fBlocal\fR delivery agent in the \fBmaster.cf\fR file.
.SH SERVER ATTRIBUTE SYNTAX
.na
.nf
.ad
.fi
The server attributes are given in the \fBmaster.cf\fR file at
the end of a service definition.  The syntax is as follows:
.IP "\fBserv\fR=\fItype\fR:\fIserver\fR"
The LMTP server to connect to for final delivery.  The \fItype\fR
portion can be either \fBunix\fR or \fBinet\fR. The \fIserver\fR
portion is the path or address of the LMTP server, depending on the
value of \fItype\fR, as shown below:
.RS
.IP "\fBserv=unix:\fR\fIclass\fR\fB/\fR\fIservname\fR"
This specifies that the local LMTP server \fIservname\fR should be
contacted for final delivery.  Both \fIclass\fR (either \fBpublic\fR
or \fBprivate\fR) and \fIservname\fR correspond to the LMTP server
entry in the \fBmaster.cf\fR file.  This LMTP server will likely
be defined as a \fBspawn\fR(8) service.
.IP "\fBserv=inet:"
If nothing follows the \fBinet:\fR type specifier, a connection will
be attempted to the destination host indicated in the delivery request.
This simplest case is identical to defining the LMTP client without
any server attributes at all.
.IP "\fBserv=inet:\fR\fIaddress\fR"
In this case, an Internet socket will be made to the server
specified by \fIaddress\fR.  The connection will use a destination
port as described in the previous section.
.IP "\fBserv=inet:\fR\fIaddress\fR\fB:\fR\fIport\fR"
Connect to the LMTP server at \fIaddress\fR, but this time use port
\fIport\fR instead of the default \fBlmtp\fR port.
.IP "\fBserv=inet:[\fR\fIipaddr\fR\fB]\fR"
The LMTP server to contact is specified using an Internet address
in the "dot notation".  That is, the numeric IP address rather
than the DNS name for the server.  The default \fBlmtp\fR port
is used.
.IP "\fBserv=inet:[\fR\fIipaddr\fR\fB]:\fR\fIport\fR"
The LMTP server to contact is specified using the numeric IP address,
at the port specified.
.RE
.PP
.SH SECURITY
.na
.nf
.ad
.fi
The LMTP client is moderately security-sensitive. It talks to LMTP
servers and to DNS servers on the network. The LMTP client can be
run chrooted at fixed low privilege.
.SH STANDARDS
.na
.nf
RFC 2033 (LMTP protocol)
RFC 821 (SMTP protocol)
RFC 1651 (SMTP service extensions)
RFC 1870 (Message Size Declaration)
RFC 2197 (Pipelining)
.SH DIAGNOSTICS
.ad
.fi
Problems and transactions are logged to \fBsyslogd\fR(8).
Corrupted message files are marked so that the queue manager can
move them to the \fBcorrupt\fR queue for further inspection.

Depending on the setting of the \fBnotify_classes\fR parameter,
the postmaster is notified of bounces, protocol problems, and of
other trouble.
.SH BUGS
.ad
.fi
.SH CONFIGURATION PARAMETERS
.na
.nf
.ad
.fi
The following \fBmain.cf\fR parameters are especially relevant to
this program. See the Postfix \fBmain.cf\fR file for syntax details
and for default values. Use the \fBpostfix reload\fR command after
a configuration change.
.SH Miscellaneous
.ad
.fi
.IP \fBdebug_peer_level\fR
Verbose logging level increment for hosts that match a
pattern in the \fBdebug_peer_list\fR parameter.
.IP \fBdebug_peer_list\fR
List of domain or network patterns. When a remote host matches
a pattern, increase the verbose logging level by the amount
specified in the \fBdebug_peer_level\fR parameter.
.IP \fBerror_notice_recipient\fR
Recipient of protocol/policy/resource/software error notices.
.IP \fBnotify_classes\fR
When this parameter includes the \fBprotocol\fR class, send mail to the
postmaster with transcripts of LMTP sessions with protocol errors.
.IP \fBlmtp_skip_quit_response\fR
Do not wait for the server response after sending QUIT.
.IP \fBlmtp_tcp_port\fR
The TCP port to be used when connecting to a LMTP server.  Used as
backup if the \fBlmtp\fR service is not found in \fBservices\fR(4).
.SH "Resource controls"
.ad
.fi
.IP \fBlmtp_cache_connection\fR
Should we cache the connection to the LMTP server? The effectiveness
of cached connections will be determined by the number of LMTP servers
in use, and the concurrency limit specified for the LMTP client.
Cached connections are closed under any of the following conditions:
.RS
.IP \(bu
The idle timeout for the LMTP client is reached. This limit is
enforced by \fBmaster\fR(8).
.IP \(bu
A message request to a different destination than the one currently
cached.
.IP \(bu
The maximum number of requests per session is reached. This limit is
enforced by \fBmaster\fR(8).
.IP \(bu
Upon the onset of another delivery request, the LMTP server associated
with the current session does not respond to the \fBRSET\fR command.
.RE
.IP \fBlmtp_destination_concurrency_limit\fR
Limit the number of parallel deliveries to the same destination.
The default limit is taken from the
\fBdefault_destination_concurrency_limit\fR parameter.
.IP \fBlmtp_destination_recipient_limit\fR
Limit the number of recipients per message delivery.
The default limit is taken from the
\fBdefault_destination_recipient_limit\fR parameter.
.IP \fBlocal_destination_recipient_limit\fR
Limit the number of recipients per message delivery.
The default limit is taken from the
\fBdefault_destination_recipient_limit\fR parameter.

This parameter becomes significant if the LMTP client is used
for local delivery.  Some LMTP servers can optimize final delivery
if multiple recipients are allowed.  Therefore, it may be advantageous
to set this to some number greater than one, depending on the capabilities
of the machine.

Setting this parameter to 0 will lead to an unlimited number of
recipients per delivery.  However, this could be risky since it may
make the machine vulnerable to running out of resources if messages
are encountered with an inordinate number of recipients.  Exercise
care when setting this parameter.
.SH "Timeout controls"
.ad
.fi
.IP \fBlmtp_connect_timeout\fR
Timeout in seconds for opening a connection to the LMTP server.
If no connection can be made within the deadline, the message
is deferred.
.IP \fBlmtp_lhlo_timeout\fR
Timeout in seconds for sending the \fBLHLO\fR command, and for
receiving the server response.
.IP \fBlmtp_mail_timeout\fR
Timeout in seconds for sending the \fBMAIL FROM\fR command, and for
receiving the server response.
.IP \fBlmtp_rcpt_timeout\fR
Timeout in seconds for sending the \fBRCPT TO\fR command, and for
receiving the server response.
.IP \fBlmtp_data_init_timeout\fR
Timeout in seconds for sending the \fBDATA\fR command, and for
receiving the server response.
.IP \fBlmtp_data_xfer_timeout\fR
Timeout in seconds for sending the message content.
.IP \fBlmtp_data_done_timeout\fR
Timeout in seconds for sending the "\fB.\fR" command, and for
receiving the server response. When no response is received, a
warning is logged that the mail may be delivered multiple times.
.IP \fBlmtp_rset_timeout\fR
Timeout in seconds for sending the \fBRSET\fR command, and for
receiving the server response.
.IP \fBlmtp_quit_timeout\fR
Timeout in seconds for sending the \fBQUIT\fR command, and for
receiving the server response.
.SH SEE ALSO
.na
.nf
bounce(8) non-delivery status reports
local(8) local mail delivery
master(8) process manager
qmgr(8) queue manager
services(4) Internet services and aliases
spawn(8) auxiliary command spawner
syslogd(8) system logging
.SH LICENSE
.na
.nf
.ad
.fi
The Secure Mailer license must be distributed with this software.
.SH AUTHOR(S)
.na
.nf
Wietse Venema
IBM T.J. Watson Research
P.O. Box 704
Yorktown Heights, NY 10598, USA

Alterations for LMTP by:
Philip A. Prindeville
Mirapoint, Inc.
USA.

Additional work on LMTP by:
Amos Gouaux
University of Texas at Dallas
P.O. Box 830688, MC34
Richardson, TX 75083, USA

--=-=-=--




From wietse@porcupine.org  Sat Feb  5 09:32:03 2000
Return-Path: <wietse@porcupine.org>
Delivered-To: wietse@hades.porcupine.org
Received: from spike.porcupine.org (spike.porcupine.org [168.100.189.2])
	by hades.porcupine.org (Postfix) with ESMTP id A7661188A7
	for <wietse@hades.porcupine.org>; Sat,  5 Feb 2000 09:32:03 -0500 (EST)
Received: by spike.porcupine.org (Postfix, from userid 100)
	id 700394563E; Sat,  5 Feb 2000 09:32:03 -0500 (EST)
Delivered-To: wietse@porcupine.org
Received: from ns0.utdallas.edu (ns0.utdallas.edu [129.110.10.1])
	by spike.porcupine.org (Postfix) with ESMTP id 605FE4563C
	for <wietse@porcupine.org>; Mon, 31 Jan 2000 18:35:02 -0500 (EST)
Received: from spartacus.utdallas.edu (spartacus.utdallas.edu [129.110.3.11])
	by ns0.utdallas.edu (Postfix) with SMTP id 02E4C1A005D
	for <wietse@porcupine.org>; Mon, 31 Jan 2000 17:34:59 -0600 (CST)
To: wietse@porcupine.org (Wietse Venema)
Subject: Re: lmtp-20000130.tar.gz
References: <20000131225228.008114563F@spike.porcupine.org>
From: Amos Gouaux <amos@utdallas.edu>
Date: 31 Jan 2000 17:35:34 -0600
In-Reply-To: wietse@porcupine.org's message of "Mon, 31 Jan 2000 17:52:28 -0500 (EST)"
Message-ID: <q6mzotlvmpl.fsf@spartacus.utdallas.edu>
Lines: 119
User-Agent: Gnus/5.0803 (Gnus v5.8.3) XEmacs/21.1 (Bryce Canyon)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: wietse@porcupine.org
Status: O

>>>>> On Mon, 31 Jan 2000 17:52:28 -0500 (EST),
>>>>> Wietse Venema <wietse@porcupine.org> (wv) writes:

wv> For local transports, command pipelining does not have the benefit
wv> that it has for TCP over non-local connections.

So in other words I was making things too complicated.  
Figures.  I have a knack for doing that.

I've updated alpha-lmtp.tar.gz again.

Here's the CHANGES file:


2000 Jan 31

* lmtp_proto.c:lmtp_lhlo: Don't worry about LMTP_FEATURE_PIPELINING
  for sessions of type LMTP_SERV_TYPE_UNIX.


2000 Jan 30

* BIG changes.  Removed all the pipe stuff from lmtp.c and
  lmtp_connect.c  Now, lmtp will either do a remote connection much
  like the smtp client, or it will connect to a UNIX domain socket
  to an auxiliary service (spawn).  This makes the lmtp patch
  simpler because it doesn't have to worry at all about exec-ing an
  external command, and all the resulting security implications.
  See README.local for details.  

  NOTE: postfix-19991231-pl04 is REQUIRED for this to work!  
        (Need the "spawn" service.)

* Updated the makefile-patch for postfix-19991231-pl03.

* lmtp.h: changed the LMTP_ATTR structure to contain "type", "class", and
  "name" fields, reflecting the change from the pipe mechanism to
  the local sockets connection.  Changed LMTP_SESSION to contain the 
  "type" field.  The connection type is recorded in this field in
  case it is needed elsewhere, like in lmtp_proto.

* lmtp.c:get_service_attr altered for new command syntax.  Examples: 

     serv=unix:private/lmtpd
     serv=inet:public/lmtpd

  After `serv=' is the "type", followed by `:', then the "class",
  followed by '/', and then finally the "name".

* Added SAME_DESTINATION macro to lmtp.c:deliver_message for
  readability, and simpler logic.

* lmtp_connect.c: changed lmtp_connect to contain logic to determine 
  just what kind of connection to make, removing it from lmtp.c;
  removed lmtp_connect_pipe; and added lmtp_connect_local, which
  uses mail_connect_wait to connect to the service running the LMTP
  server (spawn).  In lmtp_connect, the connection type stored in
  attr.type is saved into session.type, so it can be used later if
  necessary. 

* lmtp_proto.c:lmtp_lhlo: towards the end of this function we check
  to see if service->type is LMTP_SERV_TYPE_UNIX so that we don't
  try to do a getsockopt on a descriptor that doesn't support it.
  Is this the best way to handle this?  Or maybe we should just try
  it and if it bombs, check the error code before simply going
  fatal?

* Snagged the latest quota_821_local.c from the smtp client.

* Updated the README files accordingly.


2000 Jan 28

* Well, wondering about using REWRITE_ADDRESS in lmtp_proto.c,
  putting the lowercase thing in there.  Though, that would also
  apply to sender address.  Is that okay?

* We shouldn't be doing DNS lookups at this stage, so can get rid
  of lmtp_unalias.c.  Also cut out the unalias portion in 
  REWRITE_ADDRESS in lmtp_proto.c


2000 Jan 11

* At the suggestion of Rupa Schomaker, added the following to 
  lmtp_proto.c:

            lowercase(rcpt->address);  /* [AAG] rupa */


1999 Dec 1 (or thereabouts)

* Added lmtp_session_reset to make it easier to remember to reset
  certain things to 0.  Did this to lmtp_chat_reset too.

* Finally, did some work with the connection caching so that an RSET
  is sent to the LMTP server.  This is done for two reasons: first,
  to tell the LMTP server to flush out any status information
  because we're about to feed it another message, and second, to
  test the link to see if it is still alive.  If the link has died
  for some reason, it is reestablished.  Changes to lmtp.c and
  lmtp_proto.c.

* There was also some tidying in lmtp.c so that things were a little
  clearer as to what was going on.  I added a few more comments as
  well.

* I tried to make the master.cf argument parsing a little more
  consistent with the other Postfix services.  Changes to lmtp.c.

* On the postfix-users mailing list, Valery Brasseur pointed out that
  errors encountered during LMTP delivery were not getting bounced
  as appropriate.  This lead me to investigate the matter, wanting
  to put this LMTP capability into service myself.  I then realized
  that some of the error checking was a tad over zealous, and so
  simplified things a bit in lmtp_proto.c.






From wietse@porcupine.org  Wed Dec  8 19:50:01 1999
Return-Path: <wietse@porcupine.org>
Delivered-To: wietse@hades.porcupine.org
Received: from spike.porcupine.org (spike.porcupine.org [168.100.189.2])
	by hades.porcupine.org (Postfix) with ESMTP id D83EE18868
	for <wietse@hades.porcupine.org>; Wed,  8 Dec 1999 19:50:00 -0500 (EST)
Received: by spike.porcupine.org (Postfix, from userid 100)
	id 827F645AFB; Wed,  8 Dec 1999 10:51:18 -0500 (EST)
Delivered-To: wietse@porcupine.org
Received: from ns0.utdallas.edu (ns0.utdallas.edu [129.110.10.1])
	by spike.porcupine.org (Postfix) with ESMTP id 90E1A457F8
	for <wietse@porcupine.org>; Tue,  7 Dec 1999 11:37:16 -0500 (EST)
Received: from spartacus.utdallas.edu (spartacus.utdallas.edu [129.110.3.11])
	by ns0.utdallas.edu (Postfix) with SMTP id 139E719FFFE
	for <wietse@porcupine.org>; Tue,  7 Dec 1999 10:37:02 -0600 (CST)
To: wietse@porcupine.org (Wietse Venema)
Subject: Re: LMTP stuff
References: <19991206162939.1C9BB458EB@spike.porcupine.org>
From: Amos Gouaux <amos+lists.postfix@utdallas.edu>
Date: 07 Dec 1999 10:37:25 -0600
In-Reply-To: wietse@porcupine.org's message of "Mon, 6 Dec 1999 11:29:38 -0500 (EST)"
Message-ID: <q6m7liqiu62.fsf@spartacus.utdallas.edu>
Lines: 46
User-Agent: Gnus/5.070099 (Pterodactyl Gnus v0.99) XEmacs/21.1 (Bryce Canyon)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: wietse@porcupine.org
Status: RO

Okay, I put out the following tar file:

ftp://ftp.utdallas.edu/pub/staff/amos/postfix/lmtp-19990427-02.tar.gz

It's not quite as tidy as I would like it, and hope to eventually
make it.  I've been making changes gradually, in part because it
might be fun to play with the connection caching later, and in part
because I'm new to the internals of Postfix.  Speaking of which, I
must say it has been a real pleasure poking around this code.  It's
fascinating to see how you've created this infrastructure by which
all the various components communicate with one another.  Pretty
slick stuff.  Very educational too.

Most of the changes are in lmtp_proto.c and lmtp.c.  I noticed in
the former that he's passing status around a lot, using the
recv_state and send_state members instead of using local vars for
these values.  I'm guess that was to keep track of the state
throughout the connection caching.  I left that as is.

In lmtp.c I removed the for loop he had, and parse the argv in a
separate function to make it a bit cleaner.  I'm assuming that with
the lmtp service there won't be much of a need to expand the argv
like it is with the pipe service, correct?  

After seeing one of your posts yesterday about the nexthop arg to
pipe, I'm wondering if this lmtp should support that as well.  I
noticed in the LMTP RFC that this LMTP can either be a local
program, or communicate to a "Gateway Delivery Agent".  If there was
a nexthop arg to lmtp, folks could specify this gateway host there.
Or, they could use the transport map and not define any args to lmtp
at all.

It's amazing how much time can be consumed just contemplating what
args should be permissible, and what's the most efficient way to
process them.  I was even wondering, if no variable expansion should
take place, if `LMTP_ATTR attr' should be global, and the call to
get_service_attr placed in a function pointed to by
MAIL_SERVER_PRE_INIT so it's only invoked once.  Still more things
to learn.  

Oh well, I've flung quite a bit mail at this thing and it seems to
be handling it fine.  So perhaps it will at least be sufficient to
satisfy folks for the time being.

Amos





From wietse@porcupine.org  Tue Nov 23 18:09:44 1999
Return-Path: <wietse@porcupine.org>
Delivered-To: wietse@hades.porcupine.org
Received: from spike.porcupine.org (spike.porcupine.org [168.100.189.2])
	by hades.porcupine.org (Postfix) with ESMTP id BD43F18864
	for <wietse@hades.porcupine.org>; Tue, 23 Nov 1999 18:09:44 -0500 (EST)
Received: by spike.porcupine.org (Postfix, from userid 100)
	id 4CC0445A9B; Tue, 23 Nov 1999 13:24:06 -0500 (EST)
Delivered-To: wietse@porcupine.org
Received: from russian-caravan.cloud9.net (russian-caravan.cloud9.net [168.100.1.4])
	by spike.porcupine.org (Postfix) with ESMTP id 979F145A9A
	for <wietse@porcupine.org>; Tue, 23 Nov 1999 13:19:06 -0500 (EST)
Received: by russian-caravan.cloud9.net (Postfix)
	id AE6E576434; Tue, 23 Nov 1999 13:16:34 -0500 (EST)
Delivered-To: postfix-users-outgoing@cloud9.net
Received: by russian-caravan.cloud9.net (Postfix, from userid 54)
	id 340DA76423; Tue, 23 Nov 1999 13:16:34 -0500 (EST)
Delivered-To: postfix-users@cloud9.net
Received: from atn01.axime.com (atn01.axime.com [160.92.1.141])
	by russian-caravan.cloud9.net (Postfix) with ESMTP id 32BE6763C6
	for <postfix-users@postfix.org>; Tue, 23 Nov 1999 13:16:32 -0500 (EST)
Received: from atos-group.com (sys-pc21.segin.com [172.18.2.119])
	by atn01.axime.com (8.8.8/8.8.8[Atos Multimedia]) with ESMTP id TAA25333;
	Tue, 23 Nov 1999 19:16:20 +0100 (MET)
Message-ID: <383AD9F2.8915CCA6@atos-group.com>
Date: Tue, 23 Nov 1999 18:16:18 +0000
From: valery brasseur <vbrasseur@atos-group.com>
Organization: Atos Multimedia
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12 i686)
X-Accept-Language: en, fr-FR
MIME-Version: 1.0
To: Amos Gouaux <amos+lists.postfix@utdallas.edu>
Cc: postfix-users@postfix.org
Subject: Re: LMTP?
References: <q6memdj3djk.fsf@spartacus.utdallas.edu> <3839189C.C4E94EA1@atos-group.com> <q6mso1yn00k.fsf@spartacus.utdallas.edu>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Precedence: bulk
Sender: wietse@porcupine.org
Status: RO

Here is the patch a use on the lmtp part of postfix for using LMTP on
Solaris (note that these diffs are not necessary for Linux !)
It's seems that the probleme come from the interpretation of the return
code from cyrus-deliver.

note : they are against lmtp-19990427.tar.gz

--- lmtp/lmtp_proto.c   Tue Apr 20 09:42:45 1999
+++ /postfix-19990906/lmtp/lmtp_proto.c    Thu Sep  2 15:04:57 1999
@@ -445,12 +445,12 @@
                        if (resp->code / 100 == 2) {
                            ++nrcpt;
                            recipient_list_add(&survivors, rcpt->offset,
rcpt->address);
-                       } else if (resp->code == 550
+                       } else /* if (resp->code == 550
                                  && strncmp(resp->str, "550 5.1.1", 9)
== 0) {
                            deliver_completed(state->src, -1);
                            state->status |= -1;
                            rcpt->offset = 0;
-                       } else {
+                       } else */ {o
                            lmtp_rcpt_fail(state, resp->code, rcpt,
                                           "host %s said: %s",
session->host,
                                           translit(resp->str, "\n", "
"));


Hope it will help.

Amos Gouaux wrote:
> 
> >>>>> On Mon, 22 Nov 1999 10:19:08 +0000,
> >>>>> valery brasseur <vbrasseur@atos-group.com> (vb) writes:
> 
> vb> I use it with cyrus, but I have done made some patch to the LMTP code
> vb> and deliver code because return code where not what the other was
> vb> expected !!!
> 
> Do you think you could submit these patches to the list?
> 
> I knew something had to be amiss.  Using the Postfix sendmail
> command I attempted to send mail to a non-existent user, jdoe.  The
> syslog from Postfix indicated successful delivery:
> 
> Nov 22 07:03:45 area52 postfix/pipe[3082]: 6316124718: to=<jdoe@area52.utdallas.edu>, relay=lmtp, delay=0, status=sent (jdoe@area52.utdallas.edu)
> 
> However, when I run deliver by hand, the response isn't so positive:
> 
> rcpt to:<jdoe@area52.utdallas.edu>
> 550 5.1.1 User unknown
> 
> Thanks,
> Amos

-- 
Valery BRASSEUR                | Phone # +33 320 60 7982 
Atos Branche Multimedia        | Fax   # +33 320 60 7649
 "Unix -- where you can do anything in two keystrokes or less..."
                         -- Unknown




