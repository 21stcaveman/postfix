#++
# NAME
#	lmdb_table 5
# SUMMARY
#	Postfix LMDB adapter
# SYNOPSIS
#	\fBpostmap lmdb:/etc/postfix/\fIfilename\fR
# .br
#	\fBpostmap -i lmdb:/etc/postfix/\fIfilename\fB <\fIinputfile\fR
#
#	\fBpostmap -d "\fIkey\fB" lmdb:/etc/postfix/\fIfilename\fR
# .br
#	\fBpostmap -d - lmdb:/etc/postfix/\fIfilename\fB <\fIinputfile\fR
#
#	\fBpostmap -q "\fIkey\fB" lmdb:/etc/postfix/\fIfilename\fR
# .br
#	\fBpostmap -q - lmdb:/etc/postfix/\fIfilename\fB <\fIinputfile\fR
# DESCRIPTION
#	The Postfix LMDB adapter provides access to a persistent,
#	memory-mapped, key-value store.  The database size is limited
#	only by the size of the memory address space and file system.
# REQUESTS
# .ad
# .fi
#	The LMDB adapter supports all Postfix lookup table operations.
#	This makes LMDB suitable for Postfix address rewriting,
#	routing, access policies, caches, or any information that
#	can be stored under a fixed lookup key.
#
#	When a transaction fails due to a full database, Postfix
#	resizes the database and retries the transaction.
#
#	Postfix access, address mapping and routing tables will
#	generate partial search keys such as domain names without
#	one or more subdomains, network addresses without one or
#	more least-significant octets, or email addresses without
#	the localpart, address extension or domain portion.
#	This behavior is also found with btree:, hash:, or ldap:
#	tables.
#
#	Unlike other flat-file based Postfix databases, changes to
#	an LMDB database do not require automatic daemon program
#	restart.
# RELIABILITY
# .ad
# .fi
#	LMDB's copy-on-write architecture achieves reliable updates,
#	at the cost of using more space than some other flat-file
#	databases.  Read operations are memory-mapped for speed.
#	Write operations are not memory-mapped to avoid silent
#	curruption due stray pointer bugs.
#
#	The Postfix LMDB adapter implements locking with fcntl(2)
#	locks at whole-file granularity. LMDB's native locking
#	scheme would require world-writable lockfiles and would
#	therefore violate the Postfix security model.
#
#	Multiple processes can safely update an LMDB database without
#	serializing requests through the proxymap(8) service.  This
#	makes LMDB suitable as a shared cache for verify(8) or
#	postscreen(8) services.
# CONFIGURATION PARAMETERS
# .ad
# .fi
#	Short-lived programs automatically pick up changes to
#	main.cf.  With long-running daemon programs, Use the command
#	"\fBpostfix reload\fR" after a configuration change.
# .IP "\fBlmdb_map_size (default: 16777216)\fR"
#	The initial OpenLDAP LMDB database size limit in bytes.
# SEE ALSO
#	postconf(1), Postfix supported lookup tables
#	postmap(1), Postfix lookup table maintenance
#	postconf(5), configuration parameters
# README FILES
# .ad
# .fi
#	Use "\fBpostconf readme_directory\fR" or
#	"\fBpostconf html_directory\fR" to locate this information.
# .na
# .nf
#	DATABASE_README, Postfix lookup table overview
#	LMDB_README, Postfix LMDB howto
# LICENSE
# .ad
# .fi
#	The Secure Mailer license must be distributed with this software.
# HISTORY
#	LMDB support was introduced with Postfix version 2.11.
# AUTHOR(S)
#	Howard Chu
#	Symas Corporation
#
#	Wietse Venema
#	IBM T.J. Watson Research
#	P.O. Box 704
#	Yorktown Heights, NY 10598, USA
#--
