MAIN	subject: primary subject
mime_state: header_token: multipart / mumble
mime_state: header_token: boundary = abcd ef
mime_state: PUSH boundary abcd ef
MAIN	content-type: multipart/(co\m\)ment)mumble mumble; boundary = "ab\cd 
 ef" mumble
HEADER END
BODY N	
BODY N	abcdef prolog
BODY N	
BODY N	--abcd ef
mime_state: header_token: message / rfc822
MULT	content-type: message/rfc822; mumble
BODY N	
NEST	subject: nested subject
mime_state: header_token: multipart / mumble
mime_state: header_token: boundary = pqrs
mime_state: PUSH boundary pqrs
NEST	content-type: multipart/mumble; boundary(comment)="pqrs"
mime_state: header_token: base64  
NEST	content-transfer-encoding: base64
mime_state: warning: invalid message/* or multipart/* encoding domain: base64
BODY N	
BODY N	pqrs prolog
BODY N	
BODY N	--pqrs
MULT	header: pqrs part 01
BODY N	
BODY N	body pqrs part 01
BODY N	
BODY N	--pqrs
MULT	header: pqrs part 02
BODY N	
BODY N	body pqrs part 02
BODY N	
BODY N	--bogus-boundary
BODY N	header: wietse
BODY N	
BODY N	body asdasads
BODY N	
mime_state: POP boundary pqrs
BODY N	--abcd ef
MULT	header: abcdef part 02
BODY N	
BODY N	body abcdef part 02
BODY N	
mime_state: POP boundary abcd ef
BODY N	--abcd ef--
BODY N	
BODY N	epilog
BODY END
mime_state: warning: improper message/* or multipart/* encoding domain
