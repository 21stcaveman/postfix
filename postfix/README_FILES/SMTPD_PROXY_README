Purpose of the SMTPD pass-through proxy feature
===============================================

Normally, Postfix receives mail, stores it in the mail queue and
then delivers it.  The Postfix SMTP server can be configured to
forward all incoming mail to an SMTP proxy server (for example, a
real-time SPAM filter) that inspects all mail BEFORE it is stored
in the Postfix mail queue.

[This is not to be confused with the approach described in the
FILTER_README document, where all mail is inspected AFTER it is
stored in the Postfix mail queue]

The SMTP proxy server receives unfiltered mail from Postfix and
does one of the following:

1 - Re-inject the mail back into Postfix, perhaps after changing
    content.

2 - Reject the mail (by sending a suitable status code back to
    Postfix) so that it is returned to sender.

3 - Send the mail somewhere else.

Limitations
===========

When used with a real-time SPAM filter, this approach allows Postfix
to reject mail before the SMTP mail transfer completes, so that
Postfix does not have to send rejected mail back to the sender.
Mail that is not accepted remains the responsibility of the client.

In all other respects this content filtering approach is inferior
to the existing content filter (see FILTER_README) which processes
mail AFTER it is queued, because that gives you full control over
how many filtering processes can be run in parallel.

The problem with real-time content filtering is that the remote
SMTP client expects an SMTP reply within a deadline. As the system
load increases, fewer and fewer CPU cycles remain available to
answer within the deadline, and eventually you either have to stop
accepting mail or you have to accept unfiltered mail.

A possible workaround is to have the proxy take special action when
the deadline is reached: add a distinctive message header that
triggers a Postfix header_checks FILTER action, or send the mail
into Postfix via an alternative Postfix SMTP server that always
turns on content filtering.

How the Postfix talks to the SMTP proxy
=======================================

When Postfix talks to the SMTP proxy server it generates its own
EHLO, DATA and QUIT commands, and forwards unmodified copies of
the MAIL FROM and RCPT TO commands that the Postfix SMTP server
has approved.  All commands are sent without using ESMTP command
pipelining. The SMTP proxy server must accept the same MAIL FROM
and RCPT TO command syntax as the Postfix SMTP server.

This feature is meant to be used as follows:
                                                             / smtp
    Internet -> smtpd -> proxy -> smtpd -> cleanup -> queue -> local
               Postfix           Postfix                     \ virtual etc.

For reference, this is the normal path through Postfix:

                                           / smtp
    Internet -> smtpd -> cleanup -> queue -> local
                Postfix                    \ virtual etc.

For comparison, this is the FILTER_README approach with an SMTP-based
content filter:
                                           / smtp
    Internet -> smtpd -> cleanup -> queue -> local
               Postfix      ^         v    \ virtual etc.
                          smtpd      smtp
                         Postfix   Postfix
                            \         /
                             filter <-
Configuration parameters 
========================

Parameters that control proxying:

smtpd_proxy_filter (syntax: host:port)

    The host and TCP port of the SMTP proxy server.  When no host
    or host:  is specified, localhost is assumed.

smtpd_proxy_timeout (default: 100s)

    Timeout for connecting to the SMTP proxy server and for sending
    and receiving data.  All proxy errors are logged to the maillog
    file, but the client sees "451 Error: queue file write error".

smtpd_proxy_ehlo (default: $myhostname)

    The hostname to use when sending an EHLO command to the SMTP
    proxy server.

Testing the SMTP pass-through proxy feature
===========================================

The following example sets up a null proxy, that is, the Postfix
SMTP server gives the mail directly to another Postfix SMTP server
process.

/etc/postfix/master.cf
    smtp      inet  n       -       n       -       -       smtpd 
        -o smtpd_proxy_filter=26
    :26       inet  n       -       n       -       -       smtpd
        -o receive_override_options=no_unknown_recipient_checks

Note: do not specify spaces around the "=" or "," characters.

The ":26" causes Postfix to listen on the localhost address only.
DO NOT expose the secondary SMTP server to the Internet :-)

The result is as follows:

    Internet -> smtpd on port 25 -> smtpd on port 26 -> cleanup -> queue

This configuration is sufficient for stress testing.

Other suggestions for test configurations: use the Postfix smtp-sink
command as the proxy, or something as basic as netcat.
