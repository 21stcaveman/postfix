PPoossttffiixx OOppeennLLDDAAPP LLMMDDBB HHoowwttoo

-------------------------------------------------------------------------------

IInnttrroodduuccttiioonn

Postfix uses databases of various kinds to store and look up information.
Postfix databases are specified as "type:name". OpenLDAP LMDB implements the
Postfix database type "lmdb". The name of a Postfix OpenLDAP LMDB database is
the name of the database file without the ".lmdb" suffix. OpenLDAP LMDB
databases are maintained with the postmap(1) and postalias(1) commands.

This document describes:

 1. How to build Postfix with OpenLDAP LMDB support.

 2. How to configure LMDB settings.

 3. Missing pthread library trouble.

 4. Unexpected failure modes that don't exist with other Postfix databases.

BBuuiillddiinngg PPoossttffiixx wwiitthh OOppeennLLDDAAPP LLMMDDBB ssuuppppoorrtt

Postfix normally does not enable OpenLDAP LMDB support. To build Postfix with
OpenLDAP LMDB support, use something like:

    % make makefiles CCARGS="-DHAS_LMDB -I/usr/local/include" \
        AUXLIBS="-L/usr/local/lib -llmdb"
    % make

Solaris may need this:

    % make makefiles CCARGS="-DHAS_LMDB -I/usr/local/include" \
        AUXLIBS="-R/usr/local/lib -L/usr/local/lib -llmdb"
    % make

The exact pathnames depend on how OpenLDAP LMDB was installed.

CCoonnffiigguurree LLMMDDBB sseettttiinnggss

Postfix provides configuration parameters that control OpenLDAP LMDB database
behavior.

  * lmdb_map_size (default: 16777216). This setting specifies the initial
    OpenLDAP LMDB database size limit in bytes. Each time a database becomes
    full, its size limit is doubled.

  * lmdb_max_readers (default: $default_process_limit). This specifies a hard
    limit on the number of read transactions that may be open at the same time
    for the same OpenLDAP LMDB database. When this number is too small, the
    Postfix LMDB client will log MDB_READERS_FULL warnings, and will run with
    reduced performance.

MMiissssiinngg pptthhrreeaadd lliibbrraarryy ttrroouubbllee

When building Postfix fails with:

    undefined reference to `pthread_mutexattr_destroy'
    undefined reference to `pthread_mutexattr_init'
    undefined reference to `pthread_mutex_lock'

Add the "-lpthread" library to the "make makefiles" command.

    % make makefiles .... AUXLIBS="... -lpthread"

Source code for OpenLDAP LMDB is available at http://www.openldap.org. More
information is available at http://highlandsun.com/hyc/mdb/.

UUnneexxppeecctteedd ffaaiilluurree mmooddeess ooff PPoossttffiixx LLMMDDBB ddaattaabbaasseess..

As documented below, conversion to LMDB introduces a number of failure modes
that don't exist with other Postfix databases. Some failure modes have been
eliminated on the course of time. The writeup below reflects the status as of
of LMDB 0.9.8.

UUnneexxppeecctteedd ""rreeaaddeerrss ffuullll"" eerrrroorrss..

Problem:
    Under heavy load, database read operations fail with MDB_READERS_FULL
    errors. This problem does not exist with other Postfix databases.

Background:
    The LMDB implementation enforces a hard limit on the number of simultaneous
    read requests for the same database environment. This limit must be
    specified with the lmdb_max_readers configuration parameter.

Mitigation:
    Postfix logs a warning suggesting that the lmdb_max_readers parameter value
    be increased, and retries the failed operation for a limited number of
    times while running with reduced performance.

Prevention:
    Monitor your LMDB files for MDB_READERS_FULL errors and make the necessary
    adjustments. Consider using CDB for read-mostly databases.

NNoonn--oobbvviioouuss rreeccoovveerryy wwiitthh ppoossttmmaapp((11))//ppoossttaalliiaass((11))//ttllssmmggrr((88)) ffrroomm aa ccoorrrruupptteedd
ddaattaabbaassee..

Problem:
    You cannot rebuild a corrupted LMDB database simply by re-running postmap
    (1) or postalias(1), or by waiting until the tlsmgr(8) daemon restarts.
    This problem does not exist with other Postfix databases.

Background:
    The Postfix LMDB database client does not truncate the database file.
    Instead it attempts to create a transaction for a "drop" request plus
    subsequent "store" requests. That is obviously not possible with a
    corrupted database file.

Impact:
    Postfix does not process mail until someone fixes the problem.

Recovery:
    First delete the ".lmdb" file by hand. Then, rebuild the file with the
    postmap(1) or postalias(1) command, or wait until the tlsmgr(8) daemon
    restarts.

Prevention:
    Arrange your file systems such that they never run out of free space.

    Use ECC memory to detect and correct silent corruption of in-memory file
    system data and metadata.

    Use a file system such as ZFS to detect and correct silent corruption of
    on-disk file system data and metadata.

