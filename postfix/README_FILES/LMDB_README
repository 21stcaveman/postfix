PPoossttffiixx OOppeennLLDDAAPP LLMMDDBB HHoowwttoo

-------------------------------------------------------------------------------

IInnttrroodduuccttiioonn

Postfix uses databases of various kinds to store and look up information.
Postfix databases are specified as "type:name". OpenLDAP LMDB implements the
Postfix database type "lmdb". The name of a Postfix OpenLDAP LMDB database is
the name of the database file without the ".lmdb" suffix. OpenLDAP LMDB
databases are maintained with the postmap(1) command.

This document describes:

 1. How to build Postfix with OpenLDAP LMDB support.

 2. How to configure LMDB settings.

 3. Missing pthread library trouble.

    Caution: the current Postfix LMDB client has unexpected limitations. For
    this reason, LMDB support is not part of the stable Postfix release.

BBuuiillddiinngg PPoossttffiixx wwiitthh OOppeennLLDDAAPP LLMMDDBB ssuuppppoorrtt

Postfix normally does not enable OpenLDAP LMDB support. To build Postfix after
you installed OpenLDAP LMDB from source code, use something like:

    % make makefiles CCARGS="-DHAS_LMDB -I/usr/local/include" \
        AUXLIBS="-L/usr/local/lib -llmdb"
    % make

Solaris needs this:

    % make makefiles CCARGS="-DHAS_LMDB -I/usr/local/include" \
        AUXLIBS="-R/usr/local/lib -L/usr/local/lib -llmdb"
    % make

The exact pathnames depend on how OpenLDAP LMDB was installed.

CCoonnffiigguurree LLMMDDBB sseettttiinnggss

Postfix provides a configuration parameter that controls how large an OpenLDAP
LMDB database may grow.

  * lmdb_map_size (default: 10 MBytes per table). This setting controls how
    large any OpenLDAP LMDB database may grow. It must be set large enough to
    accommodate the largest table that Postfix will use.

MMiissssiinngg pptthhrreeaadd lliibbrraarryy ttrroouubbllee

When building Postfix fails with:

    undefined reference to `pthread_mutexattr_destroy'
    undefined reference to `pthread_mutexattr_init'
    undefined reference to `pthread_mutex_lock'

Add the "-lpthread" library to the "make makefiles" command.

    % make makefiles .... AUXLIBS="... -lpthread"

Source code for OpenLDAP LMDB is available at http://www.openldap.org. More
information is available at http://highlandsun.com/hyc/mdb/.

LLiimmiittaattiioonnss ooff PPoossttffiixx LLMMDDBB ddaattaabbaasseess..

  * UUnneexxppeecctteedd ppoossttmmaapp//ppoossttaalliiaass ""ddaattaabbaassee ffuullll"" eerrrroorrss..

    Even if the "postmap filename" command succeeds, the exact same command,
    with the exact same input data, may fail subsequently with an MDB_MAP_FULL
    error. The reason is that unlike other Postfix databases such as "hash" or
    "btree",

      o LMDB databases have a hard size limit (configured with the
        lmdb_map_size configuration parameter).

      o The Postfix LMDB database client does not implement the "truncate"
        operation. Instead it saves all store requests to a transaction (which
        takes up space in addition to the existing data), and commits the
        transaction when the database is closed. Only then can the space for
        old data be reused.

    This postmap(1) or postalias(1) command failure does not affect Postfix
    availability, because the old data still exists in the database.

    To recover, increase the lmdb_map_size limit in main.cf, and retry the
    postmap(1) or postalias(1) command.

  * PPoossttffiixx ddaaeemmoonn ""ddaattaabbaassee ffuullll"" eerrrroorrss..

    Unfortunately, "database full" problems will affect Postfix availability
    with daemon programs such as postscreen(8), tlsmgr(8) or verify(8). These
    daemon programs will continue to fail until someone increases the
    lmdb_map_size parameter value. Meanwhile, mail processing comes to a halt.

  * NNoonn--oobbvviioouuss rreeccoovveerryy ffrroomm aa ccoorrrruupptteedd ddaattaabbaassee..

    Unlike other Postfix databases such as "hash" or "btree", you can't rebuild
    a corrupted LMDB database simply by running postmap(1) or postalias(1), as
    those commands will crash, too.

    The reason for this limitation is that the Postfix LMDB database client
    does not implement the database "truncate" operation. Instead it tries to
    save all store requests to a transaction for later processing. That is
    obviously not possible with a corrupted database file.

    To recover, you must first delete the ".lmdb" file by hand, and only then
    you can retry the postmap(1) or postalias(1) command.

  * IInnccoommppaattiibbiilliittyy wwiitthh ttllssmmggrr((88))..

    The Postfix LMDB database client breaks tlsmgr(8) TLS session cache
    management. Specifically, it breaks how tlsmgr(8) clears its TLS session
    cache databases upon start-up, it breaks how tlsmgr(8) looks up new TLS
    session cache entries, and it breaks how tlsmgr(8) automatically recovers
    from a corrupted database file.

    The reason for these limitations is that the Postfix LMDB database client
    does not implement the database "truncate" operation. Instead it saves all
    store requests to a transaction which it commits only when the database is
    closed. Therefore, tlsmgr(8) will never find any entries that it stores
    after opening its TLS session cache databases. And when the database
    becomes corrupted, tlsmgr(8) will keep crashing until someone removes the
    file ".lmdb" file by hand.

