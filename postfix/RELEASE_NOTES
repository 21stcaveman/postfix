The official Postfix release is called 2.1.x where 2=major release
number, 1=minor release number, x=patchlevel.  Snapshot releases
are now called 2.2-yyyymmdd where yyyymmdd is the release date
(yyyy=year, mm=month, dd=day).  The mail_release_date configuration
parameter contains the release date (both for official release and
snapshot release).  Patches are issued for the official release
and change the patchlevel and the release date. Patches are never
issued for snapshot releases.

Incompatible changes with snapshot Postfix-2.2-20041019
=======================================================

Support for return addresses in the non-standard Errors-To: message
headers is removed. It was already disabled by default with Postfix
version 2.1.

Major changes with snapshot Postfix-2.2-20041019
================================================

The NIS+ client by Geoff Gibbs is now part of the Postfix source
tree. Details are given in the nisplus_table(5) manual page.

Message header address rewriting contexts. These control what
domains are appended to incomplete addresses in message headers,
and whether headers are rewritten at all.

- "local": Append the domain names in myorigin or mydomain to
  incomplete addresses in message headers.

- "invalid": append "domain.invalid" (or whatever is specified
  with the invalid_header_rewrite_context_domain parameter) to
  incomplete addresses in message headers,

- "none": disable header address rewriting (don't even do canonical
  mapping or address masquerading).

The "local" address rewriting context is used for mail submitted
with the Postfix sendmail command, for mail from clients that match
$local_header_rewrite_context_clients (default: $inet_interfaces
$mynetworks), and for mail from SASL authenticated clients.  It is
not automatically used for pop-before-smtp clients; you'll have to
specify their lookup table via the local_header_rewrite_context_clients
parameter.

The smtpd_remote_header_rewrite_context parameter specifies the
address
rewriting context for remote mail. The backwards compatible default
is "local".  Purists will specify "none", so that Postfix does not
modify headers (not even with canonical mappings or address
masquerading).

Postix always uses the "local" context for envelope addresses,
because an unqualified address is effectively local when someone
attempts to reply to it.

Incompatible changes with snapshot Postfix-2.2-20041009
=======================================================

You must reload or stop/start Postfix, because the queue manager
to delivery agent protocol has changed. If you forget this, mail
will remain queued until the queue manager is restarted.

The smtpd_client_connection_limit_exceptions parameter is renamed
to smtpd_client_event_limit_exceptions. Besides connections it now
also applies to per-client message rate and recipient rate limits.

Major changes with snapshot Postfix-2.2-20041009
================================================

Per SMTP client message rate and recipient rate limits. These limit
the number of MAIL FROM or RCPT TO requests regardless of whether
or not Postfix would have accepted them otherwise. The user interface
(smtpd_client_message_rate_limit and smtpd_client_recipient_rate_limit)
is similar to that of the existing per SMTP client connection rate
limit, and the same warnings apply: these features are to be used
to stop abuse, and must not be used to regulate legitimate mail.
More details can be found in the postconf(5) manual.

Incompatible changes with snapshot Postfix-2.2-20040919
=======================================================

This snapshot adds a discard service to the master.cf file.

Major changes with snapshot Postfix-2.2-20040919
================================================

A new discard(8) mail delivery agent that makes throwing away mail
easier and more efficient. It's the Postfix equivalent of /dev/null
for deliveries. On the input side, Postfix already has a /dev/null
equivalent in the form of the DISCARD action in access maps and
header_body_checks.

Access control for local mail submission, for listing the queue
and for flushing the queue. These features are controlled with
authorized_submit_users, authorized_mailq_users, and with
authorized_flush_users, respectively. The last two controls are
always permitted for the super-user and for the mail system owner.
More information is in the postconf(5) manual.

Incompatible changes with snapshot Postfix-2.2-20040829
=======================================================

When no recipients are specified on the command line or via the -t
option, the Postfix sendmail command terminates with status EX_USAGE
and produces an error message instead of accepting the mail first
and bouncing it later. This gives more direct feedback in case of
a common client configuration error.

Major changes with snapshot Postfix-2.2-20040827
================================================

Easier use of the proxymap service with the virtual(8) delivery
agent. As of now, the virtual(8) delivery agent will silently open
maps directly when they can't be proxied.  This means you can now
specify "virtual_mailbox_maps = proxy:mysql:whatever" without
triggering fatal errors in the virtual(8) delivery agent.

Better SMTP client control over the use of SASL mechanisms. New
smtp_sasl_mechanism_filter mechanism to shorten the list of SASL
mechanisms from a remote server to just those that the local SASL
library can actually use.

Finer control over canonical mapping with canonical_classes,
sender_canonical_classes and recipient_canonical_classes.  These
specify one or more of envelope_sender, header_sender, envelope_recipient
or header_recipient. The default settings are backwards compatible.

Incompatible changes with snapshot Postfix-2.2-20040729
=======================================================

SMTP session caching is enabled temporarily when a destination has
a high volume of mail in the active queue.  To disable, specify
"smtp_connection_cache_on_demand = no".

Major changes with snapshot Postfix-2.2-20040729
================================================

Opportunistic SMTP session caching. When a destination has a high
volume of mail in the active queue, SMTP session caching is enabled
temporarily.  This is controlled with a new configuration parameter
"smtp_connection_cache_on_demand" (default:  yes).

Incompatible changes with snapshot Postfix-2.2-20040723
=======================================================

Permanent SMTP session caching is now enabled with the
smtp_session_cache_destinations parameter. This requires "bare"
domain names without "[]" or TCP port.  The change eliminates a
syntax conflict between host:port and maptype:mapname, and simplifies
the user interface, at the cost of a minor loss of control over
what sessions are cached.

Major changes with snapshot Postfix-2.2-20040721
================================================

The session cache manager now logs cache hit and miss statistics
every $session_cache_status_update_time seconds (default: 600s).
It reports the hit and miss rates for lookups by domain, as well
as for lookups by network address. 

Hit rates for cache lookups by domain will tell you how useful
session caching is.

Cache lookups by network address will always fail, unless you're
sending mail to different domains that share the same MX host.

Incompatible changes with snapshot Postfix-2.2-20040720
=======================================================

The default SMTP/LMTP timeouts for sending RSET are reduced to 20s.

Major changes with snapshot Postfix-2.2-20040720
================================================

Selective permanent SMTP session caching. Instead of disconnecting
immediately after a mail transaction, the SMTP client can save the
open session to a session cache daemon, so that any SMTP client
process can use that session for another mail transaction.

This feature introduces the scache (session cache) server, which
is added to your master.cf file when you upgrade Postfix.

*** You need to execute "postfix reload" when upgrading from Postfix
*** version 2.1 or later.

*** You need to execute "postfix stop" when upgrading from Postfix
*** version 2.0 or earlier. Execute "postfix start" when done.

Session caching is enabled with the new smtp_connection_cache_destinations
parameter. Specify a list of destinations or lookup tables:

- if mail is sent without relay host: a domain (the right-hand side
of an email address),

- if mail is sent via a relay host, the relay host (without [],
and without non-default TCP port) that is specified in main.cf or
in the transport map,

- a /file/name with domains and/or relay hosts,

- a type:table with domains and/or relay hosts on the left-hand
side; the right-hand side result from type:table lookups is ignored.

The following optimizes deliveries to hosts that your machine relays
mail to:

    smtp_connection_cache_destinations = $relay_domains $relayhost

A setting that tries to optimize deliveries to problem sites:

    smtp_connection_cache_destinations = hotmail.com...

Cached SMTP sessions are allowed to remain unused for only a limited
amount of time (smtp_connection_cache_time_limit, default:  2
seconds). This limits the impact on remote server resources.
Specify larger values only with permission from the remote sites.

To avoid triggering remote problems, the same SMTP session is used
only a limited number of times (smtp_connection_cache_reuse_limit,
default:  10).

Robustness note: to prevent mail from being delivered to the wrong
server, the session caching feature explicitly labels each cached
session with destination domain and IP address information. A
session cache lookup succeeds only when the correct information is
specified.

Limitations:

- SMTP session caching does not work with TLS (the necessary support
for object passivation and re-activation does not exist without
closing the connection).

- SMTP session caching assumes that SASL credentials are valid for
all hostnames or domain names that map onto the same IP address
and TCP port.

Major changes with snapshot Postfix-2.2-20040621
================================================

Control over the working directory when executing an external
command.  With the pipe(8) mailer, specify directory=pathname, and
with local(8) specify "command_execution_directory = expression"
where "expression" is subject to $home etc. macro expansion. The
result of macro expansion is restricted by the set of characters
specified with execution_directory_expansion_filter.
