This is the Postfix 2.12 (experimental) release.

The stable Postfix release is called postfix-2.11.x where 2=major
release number, 11=minor release number, x=patchlevel.  The stable
release never changes except for patches that address bugs or
emergencies. Patches change the patchlevel and the release date.

New features are developed in snapshot releases. These are called
postfix-2.12-yyyymmdd where yyyymmdd is the release date (yyyy=year,
mm=month, dd=day).  Patches are never issued for snapshot releases;
instead, a new snapshot is released.

The mail_release_date configuration parameter (format: yyyymmdd)
specifies the release date of a stable release or snapshot release.

If you upgrade from Postfix 2.10 or earlier, read RELEASE_NOTES-2.11
before proceeding.

Major changes with snapshot 20140522
====================================

Support to build Postfix with Postfix shared libraries, and with
support for database plugins. This is based on Debian code by LaMont
Jones, and based on a port by Viktor Dukhovni. Support exists for
Linux, FreeBSD and MacOS X. Postfix shared libraries introduce minor
runtime overhead and result in smaller Postfix executable files.

This is introduced early in the Postfix development cycle to give
down-stream maintainers sufficient time to prepare their build
systems for the next stable Postfix release.

Differences with Debian
-----------------------

Besides changes to the Postfix "build" system as described below,
the user-visible changes with respect to Debian are:

- The shlib_directory parameter specifies the location of the
  libpostfix-*.so.* shared-library files. You can change the location
  of these files after Postfix is built. However you may have to
  run ldconfig if you move the libpostfix-*.so.* files to a non-system
  directory.  No ldconfig is needed if you keep the libpostfix-*.so.*
  files in the default $shlib_directory location.

- The plugin_directory parameter specifies the location of the
  dynamicmaps.cf database plugin configuration file (and of any
  postfix-*.so.* plugins with a relative pathname).  The dynamicmaps.cf
  location is not hard-coded to /etc, because this file is shared
  among all Postfix instances just like postfix-files and other
  files.

Building with Postfix shared libraries
--------------------------------------

To build with Postfix shared-library support:

% make makefiles shared=yes
% make
# make install

This defaults to installing shared libraries in /usr/local/lib,
with a shared-library version that equals the Postfix version
(e.g., libpostfix-util.so.x.y.z, libpostfix-util.so.x.y-date, or
libpostfix-util.so.x.y-date-nonprod).

To override this, use, for example:

% make makefiles shared=yes shlib_directory=/usr/lib \
    SHLIB_VERSION=1 ...other arguments...

The same syntax can be used to override other Postfix installation
parameter settings such as:

% make makefiles config_directory=/usr/local/etc/postfix ...

The earlier override method using CCARGS remains supported.

Building with dynamicmaps.cf database plugins
---------------------------------------------

To build with dynamicmaps.cf database plugin support:

% make makefiles dynamicmaps=yes
% make
# make install

This implicitly enables Postfix shared-library support, and defaults
to installing dynamicmaps.cf and postfix-*.so.* plugins in
/usr/libexec/postfix.  The dynamicmaps.cf file and database plugins
are given a suffix that equals the shared-library version (see
SHLIB_VERSION discussion above). 

To override the plugin_directory location, use, for example,

% make makefiles dynamicmaps=yes plugin_directory=/usr/lib/postfix ...

Further information
-------------------

For more, see "mantools/srctoman - makedefs | nroff -man | less".
and see the preliminary documentation in the INSTALL guide.

Major changes with snapshot 20140321
====================================

Delivery status filter support, to replace the delivery status codes
and explanatory text of successful or unsuccessful deliveries by
Postfix mail delivery agents.

This was originally implemented for sites that want to turn certain
soft delivery errors into hard delivery errors, but it can also be
used to censor out information from delivery confirmation reports.

This feature is implemented as a filter that replaces the three-number
enhanced status code and descriptive text in Postfix delivery agent
success, bounce, or defer messages. Note: this will not override
"soft_bounce=yes", and this will not change a successful delivery
status into an unsuccessful status or vice versa.

The first example turns specific soft TLS errors into hard
errors, by overriding the first number in the enhanced status code.

/etc/postfix/main.cf:
    smtp_delivery_status_filter = pcre:/etc/postfix/smtp_dsn_filter

/etc/postfix/smtp_dsn_filter:
    /^4(\.\d+\.\d+ TLS is required, but host \S+ refused to start TLS: .+)/ 5$1
    /^4(\.\d+\.\d+ TLS is required, but was not offered by host .+)/ 5$1

The second example removes the destination command name and file
name from local(8) successful delivery reports, so that they will
not be reported when a sender requests confirmation of delivery.

/etc/postfix/main.cf:
    local_delivery_status_filter = pcre:/etc/postfix/local_dsn_filter

/etc/postfix/local_dsn_filter:
    /^(2\S+ delivered to file).+/    $1
    /^(2\S+ delivered to command).+/ $1

This feature is supported in the lmtp(8), local(8), pipe(8), smtp(8)
and virtual(8) delivery agents. That is, all delivery agents that
actually deliver mail. 

The new main.cf parameters and default values are:

    default_delivery_status_filter =
    lmtp_delivery_status_filter = $default_delivery_status_filter
    local_delivery_status_filter = $default_delivery_status_filter
    pipe_delivery_status_filter = $default_delivery_status_filter
    smtp_delivery_status_filter = $default_delivery_status_filter
    virtual_delivery_status_filter = $default_delivery_status_filter

See the postconf(5) manpage for more details.
