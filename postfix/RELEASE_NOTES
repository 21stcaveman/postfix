This is the Postfix 2.12 (experimental) release.

The stable Postfix release is called postfix-2.11.x where 2=major
release number, 11=minor release number, x=patchlevel.  The stable
release never changes except for patches that address bugs or
emergencies. Patches change the patchlevel and the release date.

New features are developed in snapshot releases. These are called
postfix-2.12-yyyymmdd where yyyymmdd is the release date (yyyy=year,
mm=month, dd=day).  Patches are never issued for snapshot releases;
instead, a new snapshot is released.

The mail_release_date configuration parameter (format: yyyymmdd)
specifies the release date of a stable release or snapshot release.

If you upgrade from Postfix 2.10 or earlier, read RELEASE_NOTES-2.11
before proceeding.

Incompatible changes with snapshot 20140524
===========================================

Postfix 2.12 expects that you specify database library dependencies
with variables named AUXLIBS_CDB, AUXLIBS_LDAP, etc.  The old AUXLIBS
variable is still supported, but the new variables are required
when building dynamically-loadable database plugins. See CDB_README,
LDAP_README, etc. for details.

Major changes with snapshot 20140524
====================================

Support to build Postfix with Postfix shared libraries, and with
dynamically-loadable database plugins. Postfix shared libraries
introduce minor runtime overhead and result in smaller Postfix
executable files. Dynamically-loadable database plugins are useful
primarily for people who install pre-compiled packages.

This is based on Debian code by LaMont Jones, and based on a port
by Viktor Dukhovni. Currently, support exists for recent versions
of Linux, FreeBSD and MacOS X, as well as ancient Solaris 9.

Postfix shared libraries and dynamically-loadable database plugins
require changes in the Postfix build procedure (specifically, the
makedefs and Makefile.in files, and scripts that install or update
Postfix).  These changes are introduced early in the annual Postfix
development cycle to give down-stream maintainers sufficient time
to prepare their build systems for the next stable Postfix release.

Building with Postfix shared libraries and database plugins
-----------------------------------------------------------

Please see the INSTALL section "Building with Postfix shared libraries
and database plugins" for fine-tuning details. 

To build with Postfix shared libraries (libpostfix-*.so.*), use:

% make makefiles shared=yes ...other arguments...

To build with dynamicmaps.cf support and dynamically-loadable
database plugins (postfix-*.so.*), use:

% make makefiles dynamicmaps=yes ...other arguments...

This implicitly enables support for libpostfix-*.so.* shared
libraries. Database plugin support is available for CDB, LDAP, LMDB,
MySQL, PCRE, PGSQL, SDBM, and SQLITE.

NOTE: Postfix 2.12 expects that you specify database library
dependencies with variables named AUXLIBS_CDB, AUXLIBS_LDAP, etc.
The old AUXLIBS variable is still supported, but the new variables
are required when building dynamically-loadable database plugins.
See CDB_README, LDAP_README, etc. for details.

Differences with Debian
-----------------------

Besides changes to the Postfix "build" system as described above,
the user-visible changes with respect to Debian are:

- The new shlib_directory parameter specifies the location of the
  libpostfix-*.so.* shared-library files. You can change the location
  of these files after Postfix is built. However, you may have to
  run ldconfig if you move the libpostfix-*.so.* files to a non-system
  directory.  No ldconfig is needed if you keep the libpostfix-*.so.*
  files in the compiled-in default $shlib_directory location.

- The new plugin_directory parameter specifies the location of the
  dynamicmaps.cf database plugin configuration file and of any
  postfix-*.so.* plugins with a relative pathname.  The dynamicmaps.cf
  location is not hard-coded to /etc, because the file is shared
  among all Postfix instances just like postfix-files and other
  files. Files in /etc are meant to be instance-specific.

Further information
--------------------

Maintainers may also benefit from the makedefs documentation
(mantools/srctoman - makedefs | nroff -man | less).

Major changes with snapshot 20140321
====================================

Delivery status filter support, to replace the delivery status codes
and explanatory text of successful or unsuccessful deliveries by
Postfix mail delivery agents.

This was originally implemented for sites that want to turn certain
soft delivery errors into hard delivery errors, but it can also be
used to censor out information from delivery confirmation reports.

This feature is implemented as a filter that replaces the three-number
enhanced status code and descriptive text in Postfix delivery agent
success, bounce, or defer messages. Note: this will not override
"soft_bounce=yes", and this will not change a successful delivery
status into an unsuccessful status or vice versa.

The first example turns specific soft TLS errors into hard
errors, by overriding the first number in the enhanced status code.

/etc/postfix/main.cf:
    smtp_delivery_status_filter = pcre:/etc/postfix/smtp_dsn_filter

/etc/postfix/smtp_dsn_filter:
    /^4(\.\d+\.\d+ TLS is required, but host \S+ refused to start TLS: .+)/ 5$1
    /^4(\.\d+\.\d+ TLS is required, but was not offered by host .+)/ 5$1

The second example removes the destination command name and file
name from local(8) successful delivery reports, so that they will
not be reported when a sender requests confirmation of delivery.

/etc/postfix/main.cf:
    local_delivery_status_filter = pcre:/etc/postfix/local_dsn_filter

/etc/postfix/local_dsn_filter:
    /^(2\S+ delivered to file).+/    $1
    /^(2\S+ delivered to command).+/ $1

This feature is supported in the lmtp(8), local(8), pipe(8), smtp(8)
and virtual(8) delivery agents. That is, all delivery agents that
actually deliver mail. 

The new main.cf parameters and default values are:

    default_delivery_status_filter =
    lmtp_delivery_status_filter = $default_delivery_status_filter
    local_delivery_status_filter = $default_delivery_status_filter
    pipe_delivery_status_filter = $default_delivery_status_filter
    smtp_delivery_status_filter = $default_delivery_status_filter
    virtual_delivery_status_filter = $default_delivery_status_filter

See the postconf(5) manpage for more details.
