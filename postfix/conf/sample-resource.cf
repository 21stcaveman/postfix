# DO NOT EDIT THIS FILE. EDIT THE MAIN.CF FILE INSTEAD. THE STUFF
# HERE JUST SERVES AS AN EXAMPLE.
#
# This file contains example settings of general Postfix resource
# control parameters.
# 
# Controls that are specific to message delivery transports are
# described in the respective sample-transportname.cf file.

# The bounce_size_limit parameter limits the amount of original
# message context in bytes that is sent in a non-delivery notification.
#
bounce_size_limit = 50000

# The command_time_limit parameter limits the amount of time for
# delivery to external commands. This limit is used by the local
# delivery agent, and is the default time limit for delivery by the
# pipe mailer.
#
# Note: if you set this time limit to a large value you must update the
# global ipc_timeout parameter as well. See sample-misc.cf for details.
#
command_time_limit = 1000

# The default_process_limit parameter specifies the default limit
# on the number of Postfix child processes that provide a given
# service.
#
default_process_limit = 100

# The deliver_lock_attempts parameter limits the number of attempts
# to acquire an exclusive lock on a mailbox or other file. 
#
deliver_lock_attempts = 5

# The deliver_lock_delay parameter specifies the time between attempts
# to acquire an exclusive lock.
#
# Time units: s (seconds), m (minutes), h (hours), d (days), w (weeks).
# The default time unit is s (seconds).
#
deliver_lock_delay = 1s

# The duplicate_filter_limit parameter limits the number of addresses
# remembered by the duplicate filter for alias, virtual, etc.
# expansion.
#
duplicate_filter_limit = 1000

# The virtual_alias_expansion_limit parameter limits the number of
# addresses that virtual expansion produces from each original recipient.
#
virtual_alias_expansion_limit = 1000

# The virtual_alias_recursion_limit parameter limits the nesting depth of
# virtual expansion. Currently the recursion limit is applied only to the
# left branch of the expansion graph, so the depth of the tree can in the
# worst case reach the sum of the expansion and recursion limits.
# This may change in the future.
#
virtual_alias_recursion_limit = 1000

# The fork_attempts parameter limits the number of attempts to
# fork() a process.
#
fork_attempts = 5

# The fork_delay parameter specifies the delay between attempts to
# fork() an external process.
#
# Time units: s (seconds), m (minutes), h (hours), d (days), w (weeks).
# The default time unit is s (seconds).
#
fork_delay = 1s

# The header_size_limit parameter limits the amount of memory in
# bytes used for storing a message header. If a header is larger,
# the remainder of the header is descarded.
#
header_size_limit = 102400

# The header_address_token_limit limits the amount of memory that
# Postfix will spend while rewriting addresses in message headers.
# The limit is expressed as a token count. Tokens beyond the limit
# are discarded.
# 
header_address_token_limit = 10240

# The line_length_limit parameter limits the amount of memory in
# bytes used for handling input lines. Longer lines are chopped up
# into pieces and reconstructed upon delivery.
#
line_length_limit = 2048

# The message_size_limit parameter limits the total size in bytes of
# a message, including envelope information.
#
message_size_limit = 10240000

# The qmgr_message_active_limit parameter limits the number of
# messages in the active queue.
#
qmgr_message_active_limit = 20000

# The qmgr_message_recipient_limit parameter limits the number of
# in-memory recipients. This limit is used before any of the message
# recipients have been read and the message has not been assigned
# to any transports yet. See also qmgr_message_recipient_minimum.
#
# This parameter also limits the size of the short-term, in-memory
# destination status cache.
#
qmgr_message_recipient_limit = 20000

# (not applicable to the oqmgr queue manager)
# The default_recipient_limit parameter is the default value for
# per-transport limit imposed on the number of in-memory recipients.
# These limits take priority over the global qmgr_message_recipient_limit
# after the message has been assigned to the respective transports.
# See also default_extra_recipient_limit and qmgr_message_recipient_minimum.
#
default_recipient_limit = 10000

# (not applicable to the oqmgr queue manager)
# The default_extra_recipient_limit parameter is the default value for
# extra per-transport limit imposed on the number of in-memory recipients.
# This extra recipient space is reserved for the cases when the scheduler
# preempts one message with another and suddenly needs some extra recipients
# slots for the chosen message in order to avoid performance degradation.
#
default_extra_recipient_limit = 1000

# (not applicable to the oqmgr queue manager)
# The qmgr_message_recipient_minimum parameter specifies the minimum
# amount of in-memory recipients for any message. This takes
# priority over any other in-memory recipient limits (i.e., global
# qmgr_message_recipient_limit and per transport XXX_recipient_limit)
# if necessary. The minimum value allowed for this parameter is 1.
#
qmgr_message_recipient_minimum = 10

# The queue_minfree parameter specifies the minimal amount of free
# space in bytes in the queue file system. This is currently used by
# the SMTP server to decide if it will accept any mail at all.
#
# By default, the SMTP server rejects MAIL FROM commands when the
# amount of free space is less than 1.5*$message_size_limit.
# 
# To specify a higher minimum free space limit, specify a value that
# is at least 1.5*$message_size_limit.
#
queue_minfree = 0

# The stale_lock_time parameter limits the time after which a stale
# lock is removed. This is used for delivery to file or mailbox.
#
# Time units: s (seconds), m (minutes), h (hours), d (days), w (weeks).
# The default time unit is s (seconds).
#
stale_lock_time = 500s

# The transport_retry_time parameter specifies the time between
# attempts by the queue manager to contact a broken message delivery
# transport.
#
# Time units: s (seconds), m (minutes), h (hours), d (days), w (weeks).
# The default time unit is s (seconds).
#
transport_retry_time = 60s
