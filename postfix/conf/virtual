# VIRTUAL(5)                                             VIRTUAL(5)
# 
# NAME
#        virtual - format of Postfix virtual alias table
# 
# SYNOPSIS
#        postmap /etc/postfix/virtual
# 
#        postmap -q "string" /etc/postfix/virtual
# 
#        postmap -q - /etc/postfix/virtual <inputfile
# 
# DESCRIPTION
#        The  optional virtual alias table specifies address alias-
#        ing for arbitrary local or non-local recipient  addresses.
#        Virtual  aliasing is recursive, and is done by the Postfix
#        cleanup(8) daemon.
# 
#        The main applications of virtual aliasing are:
# 
#        o      To redirect mail for one address  to  one  or  more
#               addresses.
# 
#        o      To  simulate  virtual  domains  where  all  virtual
#               addresses are aliased to non-virtual addresses.
# 
#               Simulated virtual domains are not  to  be  confused
#               with  the true virtual domains that are implemented
#               with the Postfix virtual(8) mail delivery agent.
# 
#        Virtual aliasing is applied  only  to  recipient  envelope
#        addresses,  and  does  not  affect message headers.  Think
#        Sendmail rule set S0, if you like. Use  canonical(5)  map-
#        ping  to rewrite header and envelope addresses in general.
# 
#        Normally, the virtual alias table is specified as  a  text
#        file  that serves as input to the postmap(1) command.  The
#        result, an indexed file in dbm or db format, is  used  for
#        fast  searching  by  the  mail system. Execute the command
#        postmap  /etc/postfix/virtual  in  order  to  rebuild  the
#        indexed file after changing the text file.
# 
#        When  the  table  is provided via other means such as NIS,
#        LDAP or SQL, the same lookups are  done  as  for  ordinary
#        indexed files.
# 
#        Alternatively,  the  table  can  be provided as a regular-
#        expression map where patterns are given as regular expres-
#        sions.  In  that  case, the lookups are done in a slightly
#        different way as described below.
# 
# TABLE FORMAT
#        The format of the virtual table is  as  follows,  mappings
#        being tried in the order as listed in this manual page:
# 
#        pattern result
#               When  pattern matches a mail address, replace it by
#               the corresponding result.
# 
#        blank lines and comments
#               Empty lines and whitespace-only lines are  ignored,
#               as  are  lines whose first non-whitespace character
#               is a `#'.
# 
#        multi-line text
#               A logical line starts with non-whitespace  text.  A
#               line  that starts with whitespace continues a logi-
#               cal line.
# 
#        With lookups from indexed files such as DB or DBM, or from
#        networked  tables  such  as NIS, LDAP or SQL, patterns are
#        tried in the order as listed below:
# 
#        user@domain address, address, ...
#               Mail for  user@domain  is  redirected  to  address.
#               This form has the highest precedence.
# 
#        user address, address, ...
#               Mail  for  user@site  is redirected to address when
#               site is equal to $myorigin, when site is listed  in
#               $mydestination,   or   when   it   is   listed   in
#               $inet_interfaces.
# 
#               This functionality overlaps with  functionality  of
#               the  local  aliases(5)  database. The difference is
#               that virtual mapping can be  applied  to  non-local
#               addresses.
# 
#        @domain address, address, ...
#               Mail  for  any  user  in  domain  is  redirected to
#               address.  This form has the lowest precedence.
# 
#        In all the above forms, when address has the form  @other-
#        domain,  the result is the same user in otherdomain.  This
#        works for the first address in the expansion only.
# 
# ADDRESS EXTENSION
#        When a mail address localpart contains the optional recip-
#        ient  delimiter  (e.g., user+foo@domain), the lookup order
#        becomes: user+foo@domain, user@domain, user+foo, user, and
#        @domain.   An unmatched address extension (+foo) is propa-
#        gated to the result of table lookup.
# 
# SIMULATED VIRTUAL DOMAINS
#        Besides virtual aliases, the virtual alias table can  also
#        be used to simulate virtual domains. With a simulated vir-
#        tual domain, all recipient addresses are aliased  to  non-
#        virtual  addresses.   These  non-virtual  addresses may be
#        either local or remote.
# 
#        Simulated virtual domains are not to be confused with  the
#        true virtual domains that are implemented with the Postfix
#        virtual(8) mail delivery agent. With true virtual domains,
#        each recipient address can have its own mailbox.
# 
#        With  a  simulated  virtual domain, the virtual domain has
#        its own user name space. Local  (i.e.  non-virtual)  user-
#        names  are  not  visible in a simulated virtual domain. In
#        particular, local aliases(5) and local mailing  lists  are
#        not visible as localname@simulated.domain.
# 
#        Support for a simulated virtual domain looks like:
# 
#        /etc/postfix/main.cf:
#            virtual_alias_maps = hash:/etc/postfix/virtual
# 
#            Note:  some systems use dbm databases instead of hash.
#            See the output from postconf -m for available database
#            types.
# 
#        /etc/postfix/virtual:
#            simulated.domain     anything (right-hand content does not matter)
#            postmaster@simulated.domain  postmaster
#            user1@simulated.domain       address1
#            user2@simulated.domain       address2, address3
# 
#        The simulated.domain anything entry is required for a sim-
#        ulated virtual domain. Without this entry,  mail  will  be
#        rejected with a "relay access denied" error condition.
# 
#        Do not list a simulated virtual domain name in the main.cf
#        mydestination configuration parameter.
# 
#        With a simulated virtual domain, the Postfix  SMTP  server
#        accepts  mail for known-user@simulated.domain, and rejects
#        mail for unknown-user@simulated.domain as undeliverable.
# 
#        Instead of specifying the simulated  virtual  domain  name
#        via  the virtual_alias_maps table, you may also specify it
#        via the main.cf virtual_alias_domains configuration param-
#        eter.   This  latter parameter uses the same syntax as the
#        main.cf mydestination configuration parameter.
# 
# REGULAR EXPRESSION TABLES
#        This section describes how the table lookups  change  when
#        the table is given in the form of regular expressions. For
#        a description of regular expression lookup  table  syntax,
#        see regexp_table(5) or pcre_table(5).
# 
#        Each  pattern  is  a regular expression that is applied to
#        the entire address being looked up. Thus, user@domain mail
#        addresses  are  not  broken up into their user and @domain
#        constituent parts, nor is user+foo broken up into user and
#        foo.
# 
#        Patterns  are  applied  in  the  order as specified in the
#        table, until a pattern is found that  matches  the  search
#        string.
# 
#        Results  are  the  same as with indexed file lookups, with
#        the additional feature that parenthesized substrings  from
#        the pattern can be interpolated as $1, $2 and so on.
# 
# BUGS
#        The  table format does not understand quoting conventions.
# 
# CONFIGURATION PARAMETERS
#        The following main.cf parameters are  especially  relevant
#        to  this  topic.  See  the Postfix main.cf file for syntax
#        details and for default values.  Use  the  postfix  reload
#        command after a configuration change.
# 
#        virtual_alias_maps
#               List of virtual aliasing tables.
# 
#        virtual_alias_domains
#               List  of  simulated  virtual domains. This uses the
#               same syntax as the mydestination parameter.
# 
#        Other parameters of interest:
# 
#        inet_interfaces
#               The network interface addresses  that  this  system
#               receives mail on.  You need to stop and start Post-
#               fix when this parameter changes.
# 
#        mydestination
#               List of domains that  this  mail  system  considers
#               local.
# 
#        myorigin
#               The  domain  that  is  appended to any address that
#               does not have a domain.
# 
#        owner_request_special
#               Give special treatment to owner-xxx and xxx-request
#               addresses.
# 
# SEE ALSO
#        cleanup(8) canonicalize and enqueue mail
#        postmap(1) create mapping table
#        regexp_table(5) POSIX regular expression table format
#        pcre_table(5) Perl Compatible Regular Expression table format
# 
# LICENSE
#        The  Secure  Mailer  license must be distributed with this
#        software.
# 
# AUTHOR(S)
#        Wietse Venema
#        IBM T.J. Watson Research
#        P.O. Box 704
#        Yorktown Heights, NY 10598, USA
# 
#                                                        VIRTUAL(5)
