WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
===============================================================

Do not use this code.  The Postfix SASL support is based on the
Cyrus SASL library, which has not enough documentation about how
the software is supposed to work.

Postfix+SASL 1.5.5 appears to work on RedHat 6.1 (pwcheck_method
of shadow or sasldb), Solaris 2.7 (pwcheck_method of shadow or
sasldb), and FreeBSD 3.4 (pwcheck_method of sasldb).  On RedHat
6.1, SASL 1.5.5 needed write access to the sasldb file.

SASL is a lot of complex code. In a future version the Postfix SASL
code is likely to be put outside the SMTP server.

Introduction
============

The Postfix SASL support (RFC 2554) was originally implemented by
Till Franke of SuSE Rhein/Main AG.  The present code is a trimmed-down
version with only the bare necessities.  

When receiving mail, Postfix logs the client-provided username,
authentication method, and sender address to the maillog file, and
optionally grants mail access via the permit_sasl_authenticated
UCE restriction.  SASL authentication information is not passed on
via message headers or via SMTP.  It is no-one's business what
username and authentication method the poster was using in order
to access the mail server.

When sending mail, Postfix looks up the server hostname in a table,
and if a username/password is found, it will use that username and
password to authenticate to the server.

Building the SASL library
=========================

Postfix appears to work with cyrus-sasl-1.5.5, which is available
from:

    ftp://ftp.andrew.cmu.edu/pub/cyrus-mail/

IMPORTANT: if you install the Cyrus SASL libraries as per the default,
you will have to symlink /usr/lib/sasl -> /usr/local/lib/sasl.

Building Postfix with SASL authentication support
=================================================

To build Postfix with SASL authentication support, the following
assumes that the Cyrus SASL include files are in /usr/local/include,
and that the Cyrus SASL libraries are in /usr/local/lib.

On some systems this generates the necessary Makefile definitions:

    % make makefiles CCARGS=-DUSE_SASL_AUTH" -I/usr/local/include" \
	AUXLIBS="-L/usr/local/lib -lsasl"

On Solaris 2.x you need to specify run-time link information,
otherwise ld.so will not find the SASL shared library:

    % make makefiles CCARGS=-DUSE_SASL_AUTH" -I/usr/local/include" \
	AUXLIBS="-L/usr/local/lib -R/usr/local/lib -lsasl"

Enabling SASL authentication in the SMTP server
===============================================

If you installed the Cyrus SASL libraries as per the default, you
will have to symlink /usr/lib/sasl -> /usr/local/lib/sasl.

See conf/sample-sasl.cf for examples. 

In order to enable SASL support in the SMTP server:

    /etc/postfix/main.cf:
	smtpd_sasl_auth_enable = yes

In order to allow mail relaying by authenticated clients:

    /etc/postfix/main.cf:
	smtpd_recipient_restrictions = 
	    permit_mynetworks permit_sasl_authenticated ...

In /usr/local/lib/sasl/smtpd.conf you need to specify what authentication
mechanism the server will support, for example:

    pwcheck_method:  sasldb

This will use the SASL password file (default: /etc/sasldb), which
is maintained with the saslpasswd command. On some systems the
saslpasswd command needs to be run multiple times before it stops
complaining.  The Postfix SMTP server needs read access to the
sasldb file - you have to play games with group access permissions.

To run chrooted with SASL support is an interesting exercise.

To test the whole mess, connect to the SMTP server, and you should
be able to have a conversation like this:

    220 server.host.name ESMTP Postfix
    EHLO client.host.name
    250-server.host.name
    250-PIPELINING
    250-SIZE 10240000
    250-ETRN
    250-AUTH DIGEST-MD5 PLAIN CRAM-MD5
    250 8BITMIME
    AUTH PLAIN dGVzdAB0ZXN0AHRlc3RwYXNz
    235 Authentication successful

Instead of dGVzdAB0ZXN0AHRlc3RwYXNz, specify the base64 encoded
form of username\0username\0password (the \0 is a null byte). The
example above is for a user named `test' with password `testpass'.

Enabling SASL authentication in the SMTP client
===============================================

Turn on client-side SASL authentication, and specify a table with
per-host username and password information.

    /etc/postfix/main.cf:
	smtp_sasl_auth_enable = yes
	smtp_sasl_passwd_maps = hash:/etc/postfix/sasl_passwd

    /etc/postfix/sasl_passwd:
	foo.com		username:password
	bar.com		username

The SASL password file is opened before the SMTP server enters the
optional chroot jail, so there is no need to copy the sasl_passwd
DB or DBM file into /var/spool/postfix/etc/postfix.
